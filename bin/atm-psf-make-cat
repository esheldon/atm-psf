#!/usr/bin/env python

def get_args():
    import argparse
    parser = argparse.ArgumentParser()
    parser.add_argument(
        '--seed', type=int, required=True,
        help='seed for random number generator'
    )
    parser.add_argument(
        '--opsim-db', required=True, help='path to opsim database'
    )
    parser.add_argument(
        '--obsid', type=int, required=True,
        help='obsid of entry in opsim database'
    )
    parser.add_argument(
        '--objfile', required=True, help='path to input objects'
    )
    parser.add_argument(
        '--instcat', required=True, help='path to output file'
    )
    parser.add_argument(
        '--progress', action='store_true',
    )
    parser.add_argument('--sim-config', help='optional simulation config')
    return parser.parse_args()


def go(args):
    import numpy as np
    import atm_psf
    import esutil

    esutil.ostools.makedirs_fromfile(args.instcat)

    rng = np.random.default_rng(args.seed)

    sim_config = atm_psf.config.load_sim_config(args.sim_config)

    opsim_data = atm_psf.process.get_opsim_data_by_id(
        opsim_db=args.opsim_db, obsid=args.obsid,
    )

    magmin = sim_config.get('magmin', -1000)
    print('using magmin:', magmin)

    atm_psf.instcat_tools.make_instcat_by_obsid_and_objfile(
        rng=rng,
        object_file=args.objfile,
        opsim_data=opsim_data,
        output_fname=args.instcat,
        progress=args.progress,
        selector=lambda d: d['magnorm'] > magmin,
    )


def main():
    args = get_args()
    go(args)


main()
