#!/usr/bin/env python

import os
import numpy as np
from atm_psf.process import run_descwl_sim_and_piff
from atm_psf.io import load_yaml


def get_args():
    import argparse
    parser = argparse.ArgumentParser()
    parser.add_argument('--seed', type=int, required=True)
    parser.add_argument('--outdir', required=True)
    parser.add_argument('--ntrial', type=int, default=1)

    # parser.add_argument(
    #     '--sim-config',
    #     help='optional sim config'
    # )
    parser.add_argument(
        '--run-config',
        help='optional run config'
    )

    parser.add_argument('--plot-dir')
    return parser.parse_args()


def main():
    args = get_args()

    print('seed:', args.seed)
    rng = np.random.RandomState(args.seed)

    if args.run_config is not None:
        run_config = load_yaml(args.run_config)
    else:
        run_config = {}

    if not os.path.exists(args.outdir):
        try:
            os.makedir(args.outdir)
        except Exception:
            pass

    for i in range(args.ntrial):

        piff_file = f'piff-{args.seed}-{i:06d}.pkl'
        source_file = f'source-{args.seed}-{i:06d}.fits'
        piff_file = os.path.join(args.outdir, piff_file)
        source_file = os.path.join(args.outdir, source_file)

        run_descwl_sim_and_piff(
            rng=rng,
            piff_file=piff_file,
            source_file=source_file,
            run_config=run_config,
            plot_dir=args.plot_dir,
        )


if __name__ == '__main__':
    main()
